name: ci

on:
  push:
    branches:
      - "main"

env:
  REGISTRY_IMAGE: cr.yandex/crpoghn06qpit3061gka/cron-prod-backup
  TAG: ${{ env.REGISTRY_IMAGE }}:0.0.1

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: catthehacker/ubuntu:act-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: https://github.com/docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: https://github.com/docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: https://github.com/docker/login-action@v2
        with:
          registry: cr.yandex
          username: ${{ secrets.YANDEX_USERNAME }}
          password: ${{ secrets.YANDEX_TOKEN }}
      - name: Build and push
        run: |
          docker build -t ${{ env.TAG }}-${{ matrix.platform }} ./cron-prod-backup
          docker push ${{ env.TAG }}-${{ matrix.platform }}

  apply:
    runs-on: [ "ubuntu-latest", "amd64" ]
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Kubectl apply
        uses: https://github.com/actions-hub/kubectl@v1.27.2
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f cron-prod-backup/manifests/ -n cron-jobs
